# Production Caddyfile
{
    # Global options
    admin off
    
    # Structured logging configuration
    log {
        format json
        output file /var/log/caddy/access.log {
            roll_size 10MB
            roll_keep 5
            roll_keep_for 720h
        }
    }
    
    # Global settings
    servers {
        protocol {
            # Strict TLS settings
            tls_min_version 1.2
            tls_ciphers TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        }
        protocols h2 h1
    }
    
    # Email for Let's Encrypt (set this via environment variable EMAIL)
    email { $EMAIL }
}

# HTTP to HTTPS redirect
http:// { $DOMAIN:localhost } {
    redir https:// { host } { uri } permanent
}

# Main site configuration
https:// { $DOMAIN:localhost } {
    # TLS configuration
    tls {
        # Use Let's Encrypt
        issuer acme
        # Enable OCSP stapling
        ocsp_stapling 168h
    }
    
    # Access logging
    log {
        output file /var/log/caddy/ { $DOMAIN }.access.log {
            roll_size 10MB
            roll_keep 5
            roll_keep_for 720h
        }
        format json {
            time_format iso8601
            time_local
        }
    }

    # API routing
    handle_path /api/* {
        reverse_proxy backend:3001 {
            header_up Host { host }
            header_up X-Real-IP { remote }
            header_up X-Forwarded-For { remote }
            header_up X-Forwarded-Proto { scheme }
            
            # Health checks
            health_path /api/health
            health_interval 30s
            health_timeout 10s
            
            # Load balancing (for future scaling)
            lb_policy round_robin
            lb_try_duration 30s
            
            # Timeouts
            timeout 60s
            
            # Automatic failover
            fail_duration 10s
            max_fails 3
        }
    }

    # Frontend routing (default)
    handle {
        reverse_proxy frontend:80 {
            header_up Host { host }
            header_up X-Real-IP { remote }
            header_up X-Forwarded-For { remote }
            header_up X-Forwarded-Proto { scheme }
            
            # Health checks (assuming frontend serves /health)
            health_path /health
            health_interval 30s
            health_timeout 10s
            
            # Load balancing (for future scaling)
            lb_policy round_robin
            
            # Timeouts
            timeout 30s
        }
    }

    # Compression
    encode gzip zstd {
        minimum_length 1024
        match {
            header Content-Type text/*
            header Content-Type application/json
            header Content-Type application/javascript
            header Content-Type application/xml
            header Content-Type application/wasm
            header Content-Type image/svg+xml
        }
        level 6
    }

    # Security headers
    header {
        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"
        
        # Prevent embedding in frames
        X-Frame-Options "DENY"
        
        # Enable XSS protection
        X-XSS-Protection "1; mode=block"
        
        # Control referrer information
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' {$DOMAIN:localhost}/api;"
        
        # HTTP Strict Transport Security
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Permissions Policy
        Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()"
        
        # Remove Server header
        -Server
    }

    # Cache static assets by file type
    @static {
        path *.css *.js *.svg *.jpg *.jpeg *.png *.gif *.ico *.woff *.woff2 *.ttf *.eot
    }
    header @static {
        # Cache for 30 days
        Cache-Control "public, max-age=2592000"
        # Remove ETag to improve cache performance
        -ETag
    }
    
    # Cache JS and CSS for longer periods (they contain hashes for cache busting)
    @assets {
        path *.*.js *.*.css # Adjust if your build process uses different hashing patterns
    }
    header @assets {
        # Cache for 1 year
        Cache-Control "public, max-age=31536000, immutable"
    }

    # No cache for HTML
    @html {
        path *.html /
    }
    header @html {
        Cache-Control "no-cache, no-store, must-revalidate"
    }

    # Error handling with custom pages (ensure frontend serves these at /404.html and /error.html)
    handle_errors {
        @404 {
            expression { http.error.status_code } == 404
        }
        handle @404 {
            rewrite * /404.html
            reverse_proxy frontend:80
        }

        @5xx {
            expression { http.error.status_code } >= 500
        }
        handle @5xx {
            rewrite * /error.html
            reverse_proxy frontend:80
        }

        # Default error handler
        handle {
            respond "{http.error.status_code} {http.error.status_text}" { http.error.status_code }
        }
    }
}
